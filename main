import asyncio
import feedparser
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from aiogram.types import Message

API_TOKEN = ""
RSS_URLS = [
    "https://lenta.ru/rss",
    "https://ria.ru/export/rss2/archive/index.xml",
    "https://tass.ru/rss/v2.xml",
    "https://meduza.io/rss/all",
]

bot = Bot(token=API_TOKEN)
dp = Dispatcher()

# –•—Ä–∞–Ω–∏–ª–∏—â–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π, —á—Ç–æ–±—ã –Ω–µ —Å–ª–∞—Ç—å –ø–æ–≤—Ç–æ—Ä–Ω–æ
sent_links = set()
USERS = set()

async def fetch_news():
    while True:
        for url in RSS_URLS:
            feed = feedparser.parse(url)
            for entry in feed.entries:
                if entry.link not in sent_links:
                    text = f"üì∞ {entry.title}\n{entry.link}"
                    # –û—Ç–ø—Ä–∞–≤–∫–∞ –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
                    for user_id in USERS:
                        await bot.send_message(user_id, text)
                    sent_links.add(entry.link)
        await asyncio.sleep(120)  # –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥—ã–µ 2 –º–∏–Ω—É—Ç

@dp.message(Command("start"))
async def start(message: types.Message):
    USERS.add(message.from_user.id)
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –Ø –±—É–¥—É –ø—Ä–∏—Å—ã–ª–∞—Ç—å —Ç–µ–±–µ –Ω–æ–≤–æ—Å—Ç–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏.")

async def main():
    asyncio.create_task(fetch_news())
    await dp.start_polling(bot)
    
if __name__ == "__main__":
    asyncio.run(main())
